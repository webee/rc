# Path to your oh-my-zsh configuration.
ZSH=~/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="re5et"

# Example aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="cd ~/.oh-my-zsh"
alias zz="source ~/.zshrc"
alias zr="exec $SHELL"

alias pb="ping www.baidu.com"

alias egrep="grep -E"
alias fgrep="grep -F"
alias pacman='sudo pacman'
alias updatedb='sudo /usr/libexec/locate.updatedb'
#alias e='emacsclient -t'
#alias ec='emacsclient -c'

#proxy
alias myip="curl -i https://api.myip.com"
alias proxy="export ALL_PROXY=socks5://127.0.0.1:1080 && export http_proxy=http://127.0.0.1:8118 && export https_proxy=http://127.0.0.1:8118"
alias unproxy="unset ALL_PROXY && unset http_proxy && unset https_proxy"
alias docker-shell="docker run -it --rm --privileged --pid=host justincormack/nsenter1"

export TAB='	'

#correction
#alias python='nocorrect python'
DISABLE_CORRECTION="true"
# Set to this to use case-sensitive completion
CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git osx docker)

# /etc/profile.d/python.sh
source /etc/profile
source $ZSH/oh-my-zsh.sh
if [ -f ~/.zprofile ]; then
    source ~/.zprofile
fi

# Customize to your needs...
#pip completion --zsh|source /dev/stdin
export PIP_DOWNLOAD_CACHE=$HOME/Library/Caches/pip
export EDITOR="vim"

#path
pathmunge /usr/local/bin
pathmunge /usr/local/sbin
pathmunge ~/scripts

# {ssh}
# if [ -x /usr/local/bin/ssh-attach ]; then
#     eval `/usr/local/bin/ssh-attach`
#     for i in ~/.ssh/{id_rsa,id_rsa_cn6};
#     do
#         if ! [ -d $i ]; then
#             continue
#         fi
#         if ssh-add -l|grep -q "$i"; then
#             continue
#         fi
#         ssh-add $i
#     done
# fi

# goenv
if [ -d "$HOME/.goenv" ]; then
    export GOENV_ROOT="$HOME/.goenv"
    pathmunge "$GOENV_ROOT/bin"
    export GOENV_GOPATH_PREFIX="$HOME/go/gopaths"
    eval "$(goenv init -)"
fi


# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
    if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

    export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
    #export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

# rbenv
eval "$(rbenv init -)"

# homebrew github api
export HOMEBREW_GITHUB_API_TOKEN=441fc8768d745ac498556d036eecf24646c0ee19

# nvm
source ~/src/github/nvm/nvm.sh
[[ -r $NVM_DIR/bash_completion ]] && . $NVM_DIR/bash_completion

# rvm
#source $HOME/.rvm/scripts/rvm
#export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting


export PATH="/usr/local/opt/sqlite/bin:$PATH"
export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"
